id: '17096302380530.7511630849294844'
definitionId: customComponentUnsafe
parentSlotId: '17096161439950.7989252050218085'
styles:
  xl:
    gridItem:
      x: 2
      y: 582
      w: 6
      h: 30
  xs:
    gridItem:
      x: 0
      y: 1546
      w: 24
      h: 30
properties:
  data: '{ title: ''Custom Component'' }'
  template: >-
    <!-- UI Bakery will put all of the script tags with "src" attribute to the
    end of the head tag.
         All of the scripts with same src attributes will be loaded only once.
         If you remove a script, make sure to reload the page.
    -->

    <script src="https://unpkg.com/react@17/umd/react.production.min.js"
    crossorigin></script>

    <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"
    crossorigin></script>

    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>


    <div class="root"></div>


    <style>
      .custom-component-container p {
        margin-top: 0;
      }
      .custom-component-container button {
        margin-bottom: 1rem;
      }
      .custom-component-container {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }
    </style>


    <script type="text/babel">
      function CustomComponent() {
        const data = UB.useData();
        React.useEffect(() => UB.setHeight(UB.container.querySelector('.root').scrollHeight));
        
        return (
          <div className="custom-component-container">
            <p>Data from UI Bakery: {data.title}</p>
            <button onClick={() => UB.triggerEvent("Data from custom component")}>Trigger Event</button>
            <input onChange={(event) => UB.updateValue(event.target.value)} placeholder="Set state"></input>
          </div>
        );
      }

      const Component = UB.connectReactComponent(CustomComponent);
      ReactDOM.render(<Component />, UB.container.querySelector('.root'));

      // It's a good practice to destroy all resources you consumed in your custom component.
      // Otherwise you might face performance leaks on other bugs especially in development mode when component could be reloaded multiple times.
      UB.onDestroy(() => ReactDOM.unmountComponentAtNode(UB.container.querySelector('.root')));
    </script>
  name: customComponent
  __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
    - xl
    - xs
slots: []
